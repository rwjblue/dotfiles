# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

vars:
  DOTFILES: "{{.ROOT_DIR}}"
  SHARED_BINUTILS_PATH: "{{.ROOT_DIR}}/../../malleatus/shared_binutils"
  LOCAL_CRATES_TARGET_PATH: "{{.DOTFILES}}/packages/binutils/local-crates"

tasks:
  install:
    desc: Build binutils and set up symlinks
    cmds:
      - task: clone-shared-binutils
      - task: build:shared-binutils
      - task: build:binutils
      - task: build:local-packages-binutils
      - task: setup-symlinks

  clone-shared-binutils:
    internal: true
    desc: Clone the shared_binutils repository if it doesn't exist
    status:
      - test -d "{{.SHARED_BINUTILS_PATH}}"
    cmds:
      - git clone https://github.com/malleatus/shared_binutils.git "{{.SHARED_BINUTILS_PATH}}"

  build:
    desc: "Build shared_binutils and local binutils"
    deps:
      - build:binutils
      - build:shared-binutils

  build:shared-binutils:
    internal: true
    run: once
    desc: Build the shared_binutils project
    # NOTE: the leading slash here is a bit annoying, but required due to a bug
    # in go-task see https://github.com/go-task/task/issues/828
    dir: "/{{.SHARED_BINUTILS_PATH}}"
    cmds:
      - cargo build

  build:binutils:
    internal: true
    desc: Build the binutils project
    dir: "packages/binutils"
    cmds:
      - cargo build

  build:local-packages-binutils:
    desc: Build the local-packages/binutils project (if it has crates)
    dir: "local-packages/binutils"
    status:
      - |
        # If find returns at least one directory inside `crates`, exit 1 => run the task
        # Otherwise, exit 0 => skip the task
        if [ "$(find crates -mindepth 1 -maxdepth 1 -type d | wc -l)" -gt 0 ]; then
          exit 1
        else
          exit 0
        fi
    cmds:
      - cargo build

  setup-symlinks:
    internal: true
    desc: Set up binutils symlinks
    deps: [build:shared-binutils]
    cmds:
      - "{{.SHARED_BINUTILS_PATH}}/target/debug/generate-binutils-symlinks"

  cache-shell-startup:
    desc: Run `cache-shell-startup` for each shell
    # NOTE: the leading slash here is a bit annoying, but required due to a bug
    # in go-task see https://github.com/go-task/task/issues/828
    dir: "/{{.DOTFILES}}"
    vars:
      PACKAGES:
        - zsh
        - fish
        - bash
        - starship

    cmds:
      - for: { var: PACKAGES }
        cmd: |
          {{.SHARED_BINUTILS_PATH}}/target/debug/cache-shell-startup \
            --config-file='{{.DOTFILES}}/packages/binutils/config/config.lua' \
            --source='{{.DOTFILES}}/packages/{{.ITEM}}' \
            --destination='{{.DOTFILES}}/packages-dist/{{.ITEM}}'
