# Setup zplug
# --------------------------------------
if [[ "$OSTYPE" == darwin* ]]; then
  export ZPLUG_HOME=$HOMEBREW_PREFIX/opt/zplug
else
  export ZPLUG_HOME=$HOME/.zplug
fi
source $ZPLUG_HOME/init.zsh

zplug mafredri/zsh-async, use:async.zsh, from:github
zplug modules/history, from:prezto
zplug modules/completion, from:prezto

# Install plugins if there are plugins that have not been installed
if ! zplug check; then
  zplug install
fi

zplug load # --verbose (if curious what is going on)

# ensure we use a stable SSH_AUTH_SOCK (so reconnecting to prior tmux sessions
# continue to be able to auth)
if [[ -r $HOME/.ssh/ssh_auth_sock ]]; then
  export SSH_AUTH_SOCK=$HOME/.ssh/ssh_auth_sock
fi

# Setup fzf
# ---------

if [[ "$OSTYPE" == darwin* ]]; then
  # Auto-completion
  [[ $- == *i* ]] && source "$HOMEBREW_PREFIX/opt/fzf/shell/completion.zsh" 2> /dev/null

  # Key bindings
  source "$HOMEBREW_PREFIX/opt/fzf/shell/key-bindings.zsh"
else
  if [[ ! "$PATH" == */$HOME/.fzf/bin* ]]; then
    export PATH="$PATH:$HOME/.fzf/bin"
  fi

  # Auto-completion
  # ---------------
  [[ $- == *i* ]] && source "$HOME/.fzf/shell/completion.zsh" 2> /dev/null

  # Key bindings
  # ------------
  source "$HOME/.fzf/shell/key-bindings.zsh"
fi

# Setup vi Mode
# -------------
bindkey -v
export KEYTIMEOUT=1

# Setup fasd
#
eval "$(fasd --init auto)"

# Common Aliases
# --------------
alias z='fasd_cd -d'     # cd, same functionality as j in autojump
alias zz='fasd_cd -d -i' # cd with interactive selection

alias g='git'
alias gst='g status -sb'      # use short version of git status
alias gap='g add -p'          # the best way to run git add
alias gd='g diff'             # show unstaged changes
alias gds='g diff --staged'   # show staged changes
alias gc='g commit --verbose' # use verbose mode with $EDITOR

# ensure ls uses colors
if [[ "$OSTYPE" == darwin* ]]; then
  alias ls="ls -G"
else
  alias ls="ls --color=auto"
fi

alias ll="ls -lah"

# Tmux helper functions

# switch to tmux session using fzf to select
__ts() {
  if [ "$TMUX" ]; then
    t_cmd='switch-client'
  else
    t_cmd='attach'
  fi

  # tmux list-sessions | fzf  | cut -d':' -f 1 | echo xargs tmux ${t_cmd} -t
  t_session=$(tmux list-sessions | fzf  | cut -d':' -f 1)

  # if selected, switch to it
  if [[ -n "$t_session" ]]; then
    tmux $t_cmd -t $t_session
  fi
}

# use `z` (from fasd setup above) to switch to a directory, if successful
# rename the window to the current working directory; this is generally nice
# when that dir is the name of a specific repo
function __tz {
  z $@ && tmux rename-window  "${PWD##*/}"
}

alias t='tmux'
alias ts='__ts'
alias gz='__tz'

# use fzf to select a specific window in the tmux session
alias tw='tmux list-windows | fzf  | cut -d':" -f 1 | xargs tmux select-window -t"

# Setup nvm -- This is really slow!
load-nvm() {
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
}



update-volta() {
  echo "removing old volta"

  echo "installing volta"
  curl -sSLf https://get.volta.sh | bash

  echo "installing current node & yarn"
  $HOME/.volta/volta fetch node@8
  $HOME/.volta/volta fetch node@10
  $HOME/.volta/volta install node@latest
  $HOME/.volta/volta install yarn

  echo "installing common user packages"
  $HOME/.volta/volta install ember-cli mocha
}

eval "$(rbenv init -)"

eval "$(starship init zsh)"


# load local (non-suitable for pushing to GH) tweaks
[ -f ~/.zshrc.local ] && source ~/.zshrc.local
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"
