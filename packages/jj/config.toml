"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[user]
name = "Robert Jackson"
email = "me@rwjblue.com"


[core]
# https://github.com/jj-vcs/jj/blob/v0.25.0/docs/config.md#watchman
# NOTE: disabled due to issues with larger repos missing/losing filesystem events on macos
# not sure exactly what is wrong and don't have time to debug :/
# fsmonitor = "watchman"
# watchman.register-snapshot-trigger = true

[ui]
bookmark-list-sort-keys = ["author-date-"]

[git]
# https://jj-vcs.github.io/jj/latest/config/#set-of-private-commits
private-commits = 'description(glob:"private:*")'
# https://jj-vcs.github.io/jj/latest/config/#prefix-for-generated-bookmarks-on-push
push-bookmark-prefix = "rwjblue/push-"
sign-on-push = true

# by default `jj git fetch` will fetch from `origin` (just like `git`), but
# when working with `gh` create forks the main upstream is a remote named
# `upstream` (and my fork is `origin`). if we configure this to be `['origin',
# 'usptream']` `jj git fetch` will error in repos with only an `origin`, so we
# just set it to `glob:*`
fetch = ["glob:*"]

# See https://github.com/jj-vcs/jj/discussions/3750
[signing]
behavior = "drop"
backend = "ssh"
key = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG90UNRupC9GKqqXL8/5TZ3mQAE6lzN4517Isklyxk8a"

[signing.backends.ssh]
program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"

[[--scope]]
--when.repositories = [
  "~/src/github/gleanwork/",
  "~/src/github/askscio/",
  "~/src/github/robert-jackson-glean/",
  "~/src/github/rwjblue/dotfiles/local-packages/",
  "~/src/github/mark3labs/mcp-go",
  "~/src/github/speakeasy-api/",
]

[--scope.user]
email = "robert.jackson@glean.com"

[--scope.signing]
key = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINnJAefwOOhSTp/bxJjFJXVluHPG7hMjgLCVqBZ/YlAW"

# Configuration for repositories where I push directly to trunk() (e.g. personal dotfiles)
[[--scope]]
--when.repositories = [
  "~/src/github/rwjblue/",
  "~/src/github/robert-jackson-glean/",
]

[[--scope]]
--when.commands = ["diff"]

[--scope.ui]
# NOTE: When using `delta` as the pager globally (e.g. for commands other than
# `jj diff`) forces the terminal output to be cleared when the pager is closed
# (because delta doesn't invoke `less` with `-X` option). This changes to only
# use `delta` for `jj diff`.
# See:
#  - https://github.com/jj-vcs/jj/blob/v0.25.0/docs/config.md#processing-contents-to-be-paged
#  - https://github.com/jj-vcs/jj/issues/4142
#  - https://github.com/jj-vcs/jj/discussions/4690
pager = "delta"
diff.format = "git"

[revset-aliases]
# View the entire branch being worked on
'slice()' = 'slice(@)'
'slice(from)' = 'ancestors(reachable(from, mutable()), 2)'

# All my commits that haven't landed yet. This is the workhorse.
'open()' = 'open(mine())'
'open(domain)' = 'domain ~ ::immutable_heads()'

# All open remote branches
'ropen()' = 'ancestors(::remote_bookmarks() ~ immutable(), 2)'

# history leading up to the working copy, like git log
'last()' = 'last(20)'
'last(n)' = 'ancestors(@, n)'

# view a revision's ancestry back to where it diverged from trunk()
'stack()' = 'stack(@)'
'stack(from)' = 'ancestors((immutable()..from) | from::, 2)'

'private()' = 'description(glob:"private:*")'

# find the nearest bookmark to the given revision
'closest_bookmark(to)' = 'heads(::to & bookmarks())'

# find the nearest revision that has a description, is not empty, and is not a merge
'closest_pushable(to)' = 'heads(::to & ~description(exact:"") & (~empty() | merges()))'

[aliases]

# abbreviations
sq = ["squash"]
ws = ["workspace"]

# viewing history
open = ["log", "-r", "open(mine())"]
ropen = ["log", "-r", "ropen()"]
recent = ["log", "-r", "last()"]

# bring a branch up to date with trunk() works with `jj update` alone or with `-b REV`
up = ["rebase", "--skip-emptied", "-d", "trunk()"]

pre-commit-last = [
  "util",
  "exec",
  "--",
  "bash",
  "-c",
  "jj diff -r @ --name-only --no-pager | xargs pre-commit run --files",
]

pre-commit-branch = [
  "util",
  "exec",
  "--",
  "bash",
  "-c",

  "jj diff -r '(trunk()..@)::' --name-only --no-pager | xargs pre-commit run --files",
]

# find the nearest bookmark and move it forward to the nearest pushable revision
tug = [
  "bookmark",
  "move",
  "--from",
  "closest_bookmark(@)",
  "--to",
  "closest_pushable(@)",
]

# rebase any private commits onto trunk()
rebase-private = ["rebase", "--skip-emptied", "-r", "private()", "-d", "@"]

[templates]
# https://github.com/jj-vcs/jj/blob/v0.25.0/docs/config.md#default-description
draft_commit_description = '''
  concat(
    description,
    "\n",
    "JJ: This commit contains the following changes:\n",
    indent("JJ:    ", diff.summary()),
    "\n",
    "JJ: ignore-rest\n",
    diff.git(),
  )
'''
